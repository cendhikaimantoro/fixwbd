
package MarketplaceWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MarketplaceWS", targetNamespace = "http://Services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MarketplaceWS {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Services/", className = "MarketplaceWS.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.HelloResponse")
    @Action(input = "http://Services/MarketplaceWS/helloRequest", output = "http://Services/MarketplaceWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validateToken", targetNamespace = "http://Services/", className = "MarketplaceWS.ValidateToken")
    @ResponseWrapper(localName = "validateTokenResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.ValidateTokenResponse")
    @Action(input = "http://Services/MarketplaceWS/validateTokenRequest", output = "http://Services/MarketplaceWS/validateTokenResponse")
    public int validateToken(
        @WebParam(name = "token", targetNamespace = "")
        String token);

    /**
     * 
     * @param n
     * @param token
     * @return
     *     returns java.util.List<MarketplaceWS.Product>
     */
    @WebMethod
    @WebResult(name = "Product", targetNamespace = "")
    @RequestWrapper(localName = "getCatalogList", targetNamespace = "http://Services/", className = "MarketplaceWS.GetCatalogList")
    @ResponseWrapper(localName = "getCatalogListResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetCatalogListResponse")
    @Action(input = "http://Services/MarketplaceWS/getCatalogListRequest", output = "http://Services/MarketplaceWS/getCatalogListResponse")
    public List<Product> getCatalogList(
        @WebParam(name = "n", targetNamespace = "")
        int n,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param id
     * @param token
     * @return
     *     returns MarketplaceWS.Product
     */
    @WebMethod
    @WebResult(name = "Product", targetNamespace = "")
    @RequestWrapper(localName = "getProduct", targetNamespace = "http://Services/", className = "MarketplaceWS.GetProduct")
    @ResponseWrapper(localName = "getProductResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetProductResponse")
    @Action(input = "http://Services/MarketplaceWS/getProductRequest", output = "http://Services/MarketplaceWS/getProductResponse")
    public Product getProduct(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param sellerUsername
     * @param price
     * @param photo
     * @param description
     * @param productName
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProduct", targetNamespace = "http://Services/", className = "MarketplaceWS.AddProduct")
    @ResponseWrapper(localName = "addProductResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.AddProductResponse")
    @Action(input = "http://Services/MarketplaceWS/addProductRequest", output = "http://Services/MarketplaceWS/addProductResponse")
    public int addProduct(
        @WebParam(name = "product_name", targetNamespace = "")
        String productName,
        @WebParam(name = "seller_username", targetNamespace = "")
        String sellerUsername,
        @WebParam(name = "price", targetNamespace = "")
        int price,
        @WebParam(name = "photo", targetNamespace = "")
        String photo,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param n
     * @param token
     * @return
     *     returns java.util.List<MarketplaceWS.Purchase>
     */
    @WebMethod
    @WebResult(name = "Purchase", targetNamespace = "")
    @RequestWrapper(localName = "getPurchasesList", targetNamespace = "http://Services/", className = "MarketplaceWS.GetPurchasesList")
    @ResponseWrapper(localName = "getPurchasesListResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetPurchasesListResponse")
    @Action(input = "http://Services/MarketplaceWS/getPurchasesListRequest", output = "http://Services/MarketplaceWS/getPurchasesListResponse")
    public List<Purchase> getPurchasesList(
        @WebParam(name = "n", targetNamespace = "")
        int n,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param id
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteProduct", targetNamespace = "http://Services/", className = "MarketplaceWS.DeleteProduct")
    @ResponseWrapper(localName = "deleteProductResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.DeleteProductResponse")
    @Action(input = "http://Services/MarketplaceWS/deleteProductRequest", output = "http://Services/MarketplaceWS/deleteProductResponse")
    public int deleteProduct(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param price
     * @param description
     * @param id
     * @param productName
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editProduct", targetNamespace = "http://Services/", className = "MarketplaceWS.EditProduct")
    @ResponseWrapper(localName = "editProductResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.EditProductResponse")
    @Action(input = "http://Services/MarketplaceWS/editProductRequest", output = "http://Services/MarketplaceWS/editProductResponse")
    public int editProduct(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "product_name", targetNamespace = "")
        String productName,
        @WebParam(name = "price", targetNamespace = "")
        int price,
        @WebParam(name = "description", targetNamespace = "")
        String description,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param n
     * @param token
     * @return
     *     returns java.util.List<MarketplaceWS.Purchase>
     */
    @WebMethod
    @WebResult(name = "Purchase", targetNamespace = "")
    @RequestWrapper(localName = "getSalesList", targetNamespace = "http://Services/", className = "MarketplaceWS.GetSalesList")
    @ResponseWrapper(localName = "getSalesListResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetSalesListResponse")
    @Action(input = "http://Services/MarketplaceWS/getSalesListRequest", output = "http://Services/MarketplaceWS/getSalesListResponse")
    public List<Purchase> getSalesList(
        @WebParam(name = "n", targetNamespace = "")
        int n,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param mode
     * @param key
     * @param n
     * @param token
     * @return
     *     returns java.util.List<MarketplaceWS.Product>
     */
    @WebMethod
    @WebResult(name = "Product", targetNamespace = "")
    @RequestWrapper(localName = "getCatalogSearch", targetNamespace = "http://Services/", className = "MarketplaceWS.GetCatalogSearch")
    @ResponseWrapper(localName = "getCatalogSearchResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetCatalogSearchResponse")
    @Action(input = "http://Services/MarketplaceWS/getCatalogSearchRequest", output = "http://Services/MarketplaceWS/getCatalogSearchResponse")
    public List<Product> getCatalogSearch(
        @WebParam(name = "mode", targetNamespace = "")
        String mode,
        @WebParam(name = "key", targetNamespace = "")
        String key,
        @WebParam(name = "n", targetNamespace = "")
        int n,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param n
     * @param token
     * @return
     *     returns java.util.List<MarketplaceWS.Product>
     */
    @WebMethod
    @WebResult(name = "Product", targetNamespace = "")
    @RequestWrapper(localName = "getYourProducts", targetNamespace = "http://Services/", className = "MarketplaceWS.GetYourProducts")
    @ResponseWrapper(localName = "getYourProductsResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.GetYourProductsResponse")
    @Action(input = "http://Services/MarketplaceWS/getYourProductsRequest", output = "http://Services/MarketplaceWS/getYourProductsResponse")
    public List<Product> getYourProducts(
        @WebParam(name = "n", targetNamespace = "")
        int n,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param id
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setLike", targetNamespace = "http://Services/", className = "MarketplaceWS.SetLike")
    @ResponseWrapper(localName = "setLikeResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.SetLikeResponse")
    @Action(input = "http://Services/MarketplaceWS/setLikeRequest", output = "http://Services/MarketplaceWS/setLikeResponse")
    public int setLike(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "token", targetNamespace = "")
        int token);

    /**
     * 
     * @param buyerUsername
     * @param quantity
     * @param consignee
     * @param phoneNumber
     * @param productId
     * @param cardVerification
     * @param postalCode
     * @param fullAddress
     * @param cardNumber
     * @param token
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPurchase", targetNamespace = "http://Services/", className = "MarketplaceWS.AddPurchase")
    @ResponseWrapper(localName = "addPurchaseResponse", targetNamespace = "http://Services/", className = "MarketplaceWS.AddPurchaseResponse")
    @Action(input = "http://Services/MarketplaceWS/addPurchaseRequest", output = "http://Services/MarketplaceWS/addPurchaseResponse")
    public int addPurchase(
        @WebParam(name = "product_id", targetNamespace = "")
        int productId,
        @WebParam(name = "buyer_username", targetNamespace = "")
        String buyerUsername,
        @WebParam(name = "quantity", targetNamespace = "")
        int quantity,
        @WebParam(name = "consignee", targetNamespace = "")
        String consignee,
        @WebParam(name = "full_address", targetNamespace = "")
        String fullAddress,
        @WebParam(name = "postal_code", targetNamespace = "")
        String postalCode,
        @WebParam(name = "phone_number", targetNamespace = "")
        String phoneNumber,
        @WebParam(name = "card_number", targetNamespace = "")
        String cardNumber,
        @WebParam(name = "card_verification", targetNamespace = "")
        String cardVerification,
        @WebParam(name = "token", targetNamespace = "")
        int token);

}
